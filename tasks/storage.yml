---
- name: Storage
  block:
  - name: mdadm
    block:
    - name: Configure
      shell: mdadm --create --verbose {{ raid_md_device }} --level={{ raid_level }} --raid-devices={{ raid_device_count }} {{ raid_devices | replace(',', ' ') }}

    - name: Format
      shell: mkfs.btrfs -f {{ raid_md_device }}

    - name: Update initramfs
      shell: update-initramfs -u

    - name: Get device UUID
      shell: |
        blkid {{ raid_md_device }} | awk '{ print $2 }' | sed -e's/UUID=//g' -e's/\"//g'
      register: blkid_uuid

    - name: Update /etc/fstab
      lineinfile:
        path: /etc/fstab
        line: "UUID={{ blkid_uuid.stdout }} {{ mount_point }} btrfs defaults 0 0"
        state: present

    - name: Reload
      shell: systemctl daemon-reload

    - name: Create mount point
      ansible.builtin.file:
        path: "{{ mount_point }}"
        state: directory
        mode: "0755"

    - name: Mount
      shell: mount -a
    when: raid_setup == "true"

  - name: Copy config
    template:
      src: nvme-hostpath-sc.yml.j2
      dest: /tmp
      owner: root
      group: root
      mode: "0644"

  - name: Apply config
    shell: kubectl apply -f /tmp/nvme-hostpath-sc.yml

  - name: Patch standard storage class
    shell: |
      kubectl patch storageclass standard -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"false"}}}'

  - name: Patch nvme-hostpath storage class
    shell: |
      kubectl patch storageclass nvme-hostpath -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
